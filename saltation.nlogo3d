; CS 390
; May 2018
; R. Teal Witter

; Profiler used to test efficiency
extensions [profiler]

; Displaced turtles store velocities in the x, y and z directions
turtles-own [
  velx
  vely
  velz
]

; Global agentsets
globals [
  surface     ; Holds all turtles on the surface
              ; (does a turtle have another one above it?)
  displaced   ; Holds all turtles currently in the air
]

; Initialize the model
; Called by user
; Observer context
to setup
  ca
  if layout = "piles" [create-piles]    ; Initialize to sand piles
  if layout = "flat" [create-flat]      ; Initialize to uniform sand
  ask patches with [pzcor < 0] [        ; Ask all patches below zero
    set pcolor gray                     ; Set color gray to represent rock surface
  ]
  init-constants                        ; Initialize various constants
end

; Create sand piles
; Called by setup
; Observer context
to create-piles
  let num-peaks round max-pxcor * max-pycor / 300              ; Calculate number of peaks
                                                               ; from world size
  ask n-of num-peaks patches with [pzcor = 7 and pzcor > 0][   ; Ask num-peaks patches just
                                                               ; above the ground
    build-down                                                 ; Build-down recursively
  ]
end

; Build sand piles down
; Called by create-piles
; Turtle context
to build-down
  if not any? turtles-here [                                        ; If no sand here
    sprout 1 [init-sand]                                            ; Sprout 1
  ]
  ask neighbors with [pzcor < [pzcor] of myself and valid-sand?] [  ; Ask neighbors below
    build-down                                                      ; Build down recursively
  ]
  ask neighbors with [pzcor = [pzcor] of myself and valid-sand?] [  ; Ask 1/10 of numbers across
    if random 10 = 0 [build-down]                                   ; Build down recursively
  ]
end

; Determine if valid sand for building down
; Called by build-down
; Turtle context
to-report valid-sand?
  report pzcor >= 0 and not any? other turtles-here          ; Report whether sand valid
                                                             ; for building
end

; Create a uniform flat surface
; Called by setup
; Observer context
to create-flat
  ask patches with [pzcor >= 0 and pzcor <= 1] [        ; Ask patches at the first two levels
    sprout 1 [init-sand]                                ; Sprout sand
  ]
end

; Initialize sand
; Called by create-piles and create-flat
; Turtle context
to init-sand
  set shape "circle"        ; Set shape sphere in 3D
  re-color                  ; Color based of zcor
end

; Re-color sand
; Called by init-sand and coloring features
; Turtle Context
to re-color
  set color 27 + zcor / 10  ; Color based on zcor
end

; Initialize constant groups and ticks
; Called by setup
; Observer context
to init-constants
  set surface turtles with [                        ; Initialize surface to sand
    not any? turtles-on patch xcor ycor (zcor + 1)  ; with no sand above
  ]
  set displaced nobody                              ; Initialize displaced to nobody
  reset-ticks                                       ; Reset-ticks for counting
end



; Move sand one step
; Called by user in forever loop or once at a time
; Observer context
to move
  blow                                                        ; Displace some sand by the wind
  ask displaced [                                             ; Ask displaced sand
    move-to patch (xcor + velx) (ycor + vely) (zcor + velz)   ; Move forward at own velocities
    set velz velz - 1                                         ; Decrement z velocity to model gravity
    impact                                                    ; Determine whether impact occurred
  ]
  update                                                      ; Update surface
  if color? [color-sand]                                      ; Color sand if switch is true
  tick                                                        ; Move forward in time
end

; Set wind to unit direction
; Called by windward?
; Observer context
to-report stand [cor]
  ifelse cor = 0 [report 0][               ; If there is no wind, report 0
    ifelse cor < 0 [report -1]             ; If there is negative wind, report -1
    [report 1]                             ; If there is positive wind report 1
  ]
end

; Determine if patch windward
; Called by blow and impact
; Turtle context
to-report windward?
  report not any? turtles-on                                  ; Report whether any turtles are on
       patch (xcor - stand windx) (ycor - stand windy) (zcor) ; the patch directly windard of self
end

; Wind displaces sand
; Called by move
; Observer context
to blow
  let num (round count surface * erosion-probability)   ; Let num to displace based on erosion-probability
  let windward surface with [windward?]                 ; Let windward to windward surface sands
  ifelse count windward < num  [                        ; If there aren't enough windward sands
    ask n-of num surface [displace]                     ; Displace num surface sands
  ][
    ask n-of num windward [displace]                    ; Wtherwise, displace num windward
  ]
end

; Report sand below current one
; Called by fall and settle
; Turtle context
to-report sand-below
  report turtles-on patch xcor ycor (zcor - 1)  ; Report turtles directly below current
end

; Fall due to gravity
; Called by displace and settle
; Turtle context
to fall
  while [(any? neighbors with [pzcor = -1 + [zcor] of myself         ; While any neighbors below
                               and not any? turtles-here]            ; without any turtles
          or not any? sand-below) and pzcor > 0] [                   ; or there isn't sand below
    ifelse not any? sand-below [                                     ; Ifelse no sand below
      set zcor zcor - 1                                              ; Fall down directly
    ][
      move-to one-of neighbors with [pzcor = -1 + [zcor] of myself   ; Move open neighbor below
                                     and not any? turtles-here]
    ]
  ]
end

; Displace a sand
; Called by blow and impact
; Turtle context
to displace
  set velx windx                               ; Set x velocity to x wind velocity
  set vely windy                               ; Set y velocity to y wind velocity
  set velz windz                               ; Set z velocity to z wind velocity
  set displaced (turtle-set displaced self)    ; Add self to displaced agentset
  set surface other surface                    ; Remove self from surface
  ask neighbors with [pzcor = 1 + [zcor] of myself and any? turtles-here] [  ; Ask neighbors without any above
    ask turtles-here [fall]                                                  ; Fall down due to gravity
  ]
end

; Settle sand after impact
; Called by impact
; Turtle Context
to settle
  set displaced other displaced   ; Remove self from displaced
  fall                            ; Fall due to gravity
end

; Determine if imapct then act accordingly
; Called by move
; Turtle context
to impact
  if any? other turtles-here [                                  ; If turtles here
    while [any? other turtles-here] [                           ; While there still are
      set zcor zcor + 1                                         ; Move up
    ]
    settle                                                      ; Then settle
    if any? other surface in-radius .5 with [windward?] [       ; If any other windward surface
      ask one-of other surface in-radius .5 with [windward?] [  ; Displace windward surface
        displace
      ]
    ]
  ]
  if pzcor <= 0 [     ; If out of bounds
    set zcor 0        ; Set to floor
    settle            ; Then settle
  ]
end

; Update surface and fix duplicates
; Called by move
; Observer context
to update
  ask turtles with [any? other turtles-here] [   ; Ask turtles with more than one turtle there
    while [any? other turtles-here] [            ; While still turtles there
      set zcor zcor + 1                          ; Move up so that only one turtle per patch
    ]
  ]
  set surface turtles with [                         ; Update surface to turtles
    not any? turtles-on patch xcor ycor (zcor + 1)   ; with not any above
    and not member? self displaced                   ; and not displaced
  ]
end

; Color sand based on group
; Called by move or user
; Observer context
to color-sand
  ask turtles [re-color]            ; Re-color all turtles
  ask surface [set color orange]    ; Set surface to oraange
  if displaced != nobody [          ; If any displaced
    ask displaced [set color 125]   ; Set displaced to purple
  ]
end

; Profile move
; Called by user
; Observer context
to profile
  profiler:start         ; Start profiling
  repeat 100 [move]      ; Repeat move 100 times
  profiler:stop          ; Stop profiling
  print profiler:report  ; Print report
  profiler:reset         ; Reset profiler for future use
end








@#$#@#$#@
GRAPHICS-WINDOW
0
0
49
50
-1
-1
1.0
1
10
1
1
1
0
1
1
1
-20
20
-20
20
-5
20
1
1
1
ticks
30.0

BUTTON
22
17
88
50
NIL
setup
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

BUTTON
22
110
87
143
NIL
move
T
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

BUTTON
22
150
120
183
move once
move
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

SLIDER
190
16
282
49
windx
windx
-5
5
-5.0
1
1
NIL
HORIZONTAL

SLIDER
190
56
282
89
windy
windy
-5
5
0.0
1
1
NIL
HORIZONTAL

SLIDER
190
111
282
144
windz
windz
1
2
1.0
1
1
NIL
HORIZONTAL

CHOOSER
22
58
160
103
layout
layout
"piles" "flat"
1

SLIDER
190
151
362
184
erosion-probability
erosion-probability
0.01
.5
0.13
.01
1
NIL
HORIZONTAL

BUTTON
395
16
459
49
color
color-sand
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

BUTTON
395
53
478
86
re-color
ask turtles [re-color]
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

BUTTON
396
106
468
139
NIL
profile
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

SWITCH
397
151
500
184
color?
color?
0
1
-1000

@#$#@#$#@
## WHAT IS IT?

Saltation describes the movement of sand across an uneven surface in a turbulent flow of air. This saltation project models how sand grains interact with wind at a micro-scale.

## HOW IT WORKS

All sand grains naturally settle downward so that all their lower neighbor patches are occupied by other sand grains.

The one rule for the saltation behavior is that wind displaces sand with erosion-probability and specified velocities from a windward surface. If the sand lands on a windward grain, then that windward grain is displaced. However, if the sand lands on a a non-windward grain, both grains settle.

## HOW TO USE IT

Set-up the model to either a uniformly flat surface or to a randomly configured sand pile (thanks to Prof Dickerson for this code).

From there, you can play with the x, y, and z velocities to attempt to form small ripples in the sand. You can also control the probability that any given windward surface grain is displaced.

For visualization, you can flip a color switch to watch the surface and displaced sand move over time.

## THINGS TO NOTICE

Notice how the magnitude of the velocities and erosion-probability influence the speed at which ripples form.

Set the velocity to only velocity in the x or y direction. Even though there is no interaction between parallel lines of sand, notice that the sand still forms into piles.

## THINGS TO TRY

Find the minimum velocities and erosion-probability at which sand ripples form. Once they form, determine whether ripples stay in place or require a certain velocity to maintain their form.

Once you have ripples going in one direction, pause the model and negate the velocities. What changes in the shape of the ripples?

Once you have ripples going in one direction, pause the model and set the velocities to be perpendicular to what they just were. What changes in the shape of the ripples? How easily do new ripples form?

Play with the z velocity and erosion-probability to try to make as many ripples as possible (four or more) or as few as possible (just one).

## EXTENDING THE MODEL

The model is limited by the computational difficulties of Netlogo 3D. An extension would be to make the code more efficient so we could visualize more sand grains.

## CREDITS AND REFERENCES

I originally completed this model for the final project of CS 390: Spatial Agent Based Modeling at Middlebury College in Spring 2018. Thanks to Professor Dickerson for the code to build sand piles and a great semester of Netlogo modeling!
@#$#@#$#@
default
true
0
Polygon -7500403 true true 150 5 40 250 150 205 260 250

airplane
true
0
Polygon -7500403 true true 150 0 135 15 120 60 120 105 15 165 15 195 120 180 135 240 105 270 120 285 150 270 180 285 210 270 165 240 180 180 285 195 285 165 180 105 180 60 165 15

arrow
true
0
Polygon -7500403 true true 150 0 0 150 105 150 105 293 195 293 195 150 300 150

box
false
0
Polygon -7500403 true true 150 285 285 225 285 75 150 135
Polygon -7500403 true true 150 135 15 75 150 15 285 75
Polygon -7500403 true true 15 75 15 225 150 285 150 135
Line -16777216 false 150 285 150 135
Line -16777216 false 150 135 15 75
Line -16777216 false 150 135 285 75

bug
true
0
Circle -7500403 true true 96 182 108
Circle -7500403 true true 110 127 80
Circle -7500403 true true 110 75 80
Line -7500403 true 150 100 80 30
Line -7500403 true 150 100 220 30

butterfly
true
0
Polygon -7500403 true true 150 165 209 199 225 225 225 255 195 270 165 255 150 240
Polygon -7500403 true true 150 165 89 198 75 225 75 255 105 270 135 255 150 240
Polygon -7500403 true true 139 148 100 105 55 90 25 90 10 105 10 135 25 180 40 195 85 194 139 163
Polygon -7500403 true true 162 150 200 105 245 90 275 90 290 105 290 135 275 180 260 195 215 195 162 165
Polygon -16777216 true false 150 255 135 225 120 150 135 120 150 105 165 120 180 150 165 225
Circle -16777216 true false 135 90 30
Line -16777216 false 150 105 195 60
Line -16777216 false 150 105 105 60

car
false
0
Polygon -7500403 true true 300 180 279 164 261 144 240 135 226 132 213 106 203 84 185 63 159 50 135 50 75 60 0 150 0 165 0 225 300 225 300 180
Circle -16777216 true false 180 180 90
Circle -16777216 true false 30 180 90
Polygon -16777216 true false 162 80 132 78 134 135 209 135 194 105 189 96 180 89
Circle -7500403 true true 47 195 58
Circle -7500403 true true 195 195 58

circle
false
0
Circle -7500403 true true 0 0 300

circle 2
false
0
Circle -7500403 true true 0 0 300
Circle -16777216 true false 30 30 240

cow
false
0
Polygon -7500403 true true 200 193 197 249 179 249 177 196 166 187 140 189 93 191 78 179 72 211 49 209 48 181 37 149 25 120 25 89 45 72 103 84 179 75 198 76 252 64 272 81 293 103 285 121 255 121 242 118 224 167
Polygon -7500403 true true 73 210 86 251 62 249 48 208
Polygon -7500403 true true 25 114 16 195 9 204 23 213 25 200 39 123

cylinder
false
0
Circle -7500403 true true 0 0 300

dot
false
0
Circle -7500403 true true 90 90 120

face happy
false
0
Circle -7500403 true true 8 8 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Polygon -16777216 true false 150 255 90 239 62 213 47 191 67 179 90 203 109 218 150 225 192 218 210 203 227 181 251 194 236 217 212 240

face neutral
false
0
Circle -7500403 true true 8 7 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Rectangle -16777216 true false 60 195 240 225

face sad
false
0
Circle -7500403 true true 8 8 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Polygon -16777216 true false 150 168 90 184 62 210 47 232 67 244 90 220 109 205 150 198 192 205 210 220 227 242 251 229 236 206 212 183

fish
false
0
Polygon -1 true false 44 131 21 87 15 86 0 120 15 150 0 180 13 214 20 212 45 166
Polygon -1 true false 135 195 119 235 95 218 76 210 46 204 60 165
Polygon -1 true false 75 45 83 77 71 103 86 114 166 78 135 60
Polygon -7500403 true true 30 136 151 77 226 81 280 119 292 146 292 160 287 170 270 195 195 210 151 212 30 166
Circle -16777216 true false 215 106 30

flag
false
0
Rectangle -7500403 true true 60 15 75 300
Polygon -7500403 true true 90 150 270 90 90 30
Line -7500403 true 75 135 90 135
Line -7500403 true 75 45 90 45

flower
false
0
Polygon -10899396 true false 135 120 165 165 180 210 180 240 150 300 165 300 195 240 195 195 165 135
Circle -7500403 true true 85 132 38
Circle -7500403 true true 130 147 38
Circle -7500403 true true 192 85 38
Circle -7500403 true true 85 40 38
Circle -7500403 true true 177 40 38
Circle -7500403 true true 177 132 38
Circle -7500403 true true 70 85 38
Circle -7500403 true true 130 25 38
Circle -7500403 true true 96 51 108
Circle -16777216 true false 113 68 74
Polygon -10899396 true false 189 233 219 188 249 173 279 188 234 218
Polygon -10899396 true false 180 255 150 210 105 210 75 240 135 240

house
false
0
Rectangle -7500403 true true 45 120 255 285
Rectangle -16777216 true false 120 210 180 285
Polygon -7500403 true true 15 120 150 15 285 120
Line -16777216 false 30 120 270 120

leaf
false
0
Polygon -7500403 true true 150 210 135 195 120 210 60 210 30 195 60 180 60 165 15 135 30 120 15 105 40 104 45 90 60 90 90 105 105 120 120 120 105 60 120 60 135 30 150 15 165 30 180 60 195 60 180 120 195 120 210 105 240 90 255 90 263 104 285 105 270 120 285 135 240 165 240 180 270 195 240 210 180 210 165 195
Polygon -7500403 true true 135 195 135 240 120 255 105 255 105 285 135 285 165 240 165 195

line
true
0
Line -7500403 true 150 0 150 300

line half
true
0
Line -7500403 true 150 0 150 150

pentagon
false
0
Polygon -7500403 true true 150 15 15 120 60 285 240 285 285 120

person
false
0
Circle -7500403 true true 110 5 80
Polygon -7500403 true true 105 90 120 195 90 285 105 300 135 300 150 225 165 300 195 300 210 285 180 195 195 90
Rectangle -7500403 true true 127 79 172 94
Polygon -7500403 true true 195 90 240 150 225 180 165 105
Polygon -7500403 true true 105 90 60 150 75 180 135 105

plant
false
0
Rectangle -7500403 true true 135 90 165 300
Polygon -7500403 true true 135 255 90 210 45 195 75 255 135 285
Polygon -7500403 true true 165 255 210 210 255 195 225 255 165 285
Polygon -7500403 true true 135 180 90 135 45 120 75 180 135 210
Polygon -7500403 true true 165 180 165 210 225 180 255 120 210 135
Polygon -7500403 true true 135 105 90 60 45 45 75 105 135 135
Polygon -7500403 true true 165 105 165 135 225 105 255 45 210 60
Polygon -7500403 true true 135 90 120 45 150 15 180 45 165 90

sheep
false
15
Circle -1 true true 203 65 88
Circle -1 true true 70 65 162
Circle -1 true true 150 105 120
Polygon -7500403 true false 218 120 240 165 255 165 278 120
Circle -7500403 true false 214 72 67
Rectangle -1 true true 164 223 179 298
Polygon -1 true true 45 285 30 285 30 240 15 195 45 210
Circle -1 true true 3 83 150
Rectangle -1 true true 65 221 80 296
Polygon -1 true true 195 285 210 285 210 240 240 210 195 210
Polygon -7500403 true false 276 85 285 105 302 99 294 83
Polygon -7500403 true false 219 85 210 105 193 99 201 83

square
false
0
Rectangle -7500403 true true 30 30 270 270

square 2
false
0
Rectangle -7500403 true true 30 30 270 270
Rectangle -16777216 true false 60 60 240 240

star
false
0
Polygon -7500403 true true 151 1 185 108 298 108 207 175 242 282 151 216 59 282 94 175 3 108 116 108

target
false
0
Circle -7500403 true true 0 0 300
Circle -16777216 true false 30 30 240
Circle -7500403 true true 60 60 180
Circle -16777216 true false 90 90 120
Circle -7500403 true true 120 120 60

tree
false
0
Circle -7500403 true true 118 3 94
Rectangle -6459832 true false 120 195 180 300
Circle -7500403 true true 65 21 108
Circle -7500403 true true 116 41 127
Circle -7500403 true true 45 90 120
Circle -7500403 true true 104 74 152

triangle
false
0
Polygon -7500403 true true 150 30 15 255 285 255

triangle 2
false
0
Polygon -7500403 true true 150 30 15 255 285 255
Polygon -16777216 true false 151 99 225 223 75 224

truck
false
0
Rectangle -7500403 true true 4 45 195 187
Polygon -7500403 true true 296 193 296 150 259 134 244 104 208 104 207 194
Rectangle -1 true false 195 60 195 105
Polygon -16777216 true false 238 112 252 141 219 141 218 112
Circle -16777216 true false 234 174 42
Rectangle -7500403 true true 181 185 214 194
Circle -16777216 true false 144 174 42
Circle -16777216 true false 24 174 42
Circle -7500403 false true 24 174 42
Circle -7500403 false true 144 174 42
Circle -7500403 false true 234 174 42

turtle
true
0
Polygon -10899396 true false 215 204 240 233 246 254 228 266 215 252 193 210
Polygon -10899396 true false 195 90 225 75 245 75 260 89 269 108 261 124 240 105 225 105 210 105
Polygon -10899396 true false 105 90 75 75 55 75 40 89 31 108 39 124 60 105 75 105 90 105
Polygon -10899396 true false 132 85 134 64 107 51 108 17 150 2 192 18 192 52 169 65 172 87
Polygon -10899396 true false 85 204 60 233 54 254 72 266 85 252 107 210
Polygon -7500403 true true 119 75 179 75 209 101 224 135 220 225 175 261 128 261 81 224 74 135 88 99

wheel
false
0
Circle -7500403 true true 3 3 294
Circle -16777216 true false 30 30 240
Line -7500403 true 150 285 150 15
Line -7500403 true 15 150 285 150
Circle -7500403 true true 120 120 60
Line -7500403 true 216 40 79 269
Line -7500403 true 40 84 269 221
Line -7500403 true 40 216 269 79
Line -7500403 true 84 40 221 269

wolf
false
0
Polygon -16777216 true false 253 133 245 131 245 133
Polygon -7500403 true true 2 194 13 197 30 191 38 193 38 205 20 226 20 257 27 265 38 266 40 260 31 253 31 230 60 206 68 198 75 209 66 228 65 243 82 261 84 268 100 267 103 261 77 239 79 231 100 207 98 196 119 201 143 202 160 195 166 210 172 213 173 238 167 251 160 248 154 265 169 264 178 247 186 240 198 260 200 271 217 271 219 262 207 258 195 230 192 198 210 184 227 164 242 144 259 145 284 151 277 141 293 140 299 134 297 127 273 119 270 105
Polygon -7500403 true true -1 195 14 180 36 166 40 153 53 140 82 131 134 133 159 126 188 115 227 108 236 102 238 98 268 86 269 92 281 87 269 103 269 113

x
false
0
Polygon -7500403 true true 270 75 225 30 30 225 75 270
Polygon -7500403 true true 30 75 75 30 270 225 225 270
@#$#@#$#@
NetLogo 3D 6.0.2
@#$#@#$#@
need-to-manually-make-preview-for-this-model
@#$#@#$#@
@#$#@#$#@
@#$#@#$#@
@#$#@#$#@
default
0.0
-0.2 0 0.0 1.0
0.0 1 1.0 0.0
0.2 0 0.0 1.0
link direction
true
0
Line -7500403 true 150 150 90 180
Line -7500403 true 150 150 210 180
@#$#@#$#@
0
@#$#@#$#@
